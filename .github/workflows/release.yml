name: Release

on:
  push:
    branches: [master, release/*]

jobs:
  release-linux-binaries:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        target: [x86_64-unknown-linux-musl, aarch64-unknown-linux-musl]
        include:
          - target: x86_64-unknown-linux-musl
            docker_image: registry.gitlab.com/rust_musl_docker/image:stable-latest
            docker_options: -v /home/runner/work/heartwood/heartwood:/workdir -v /home/runner/.cargo/git:/root/.cargo/git -v /home/runner/.cargo/registry:/root/.cargo/registry
          - target: aarch64-unknown-linux-musl
            docker_image: messense/rust-musl-cross:aarch64-musl
            docker_options: -v /home/runner/work/heartwood/heartwood:/home/rust/src -v /home/runner/.cargo/git:/root/.cargo/git -v /home/runner/.cargo/registry:/root/.cargo/registry
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
      - name: Configure build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Build the binaries
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.docker_image }}
          options: ${{ matrix.docker_options }}
          run: |
            rustup target add ${{ matrix.target }}
            staging="radicle-${{ matrix.target }}"
            mkdir -p "$staging"

            cargo build --target=${{ matrix.target }} --package=radicle-httpd --release
            cp target/${{ matrix.target }}/release/radicle-httpd "$staging"/

            cargo build --target=${{ matrix.target }} --package=radicle-node --release
            cp target/${{ matrix.target }}/release/radicle-node "$staging"/

            cargo build --target=${{ matrix.target }} --bin rad --release
            cp target/${{ matrix.target }}/release/rad "$staging"/

            cargo build --target=${{ matrix.target }} --bin git-remote-rad --release
            cp target/${{ matrix.target }}/release/git-remote-rad "$staging"/

            tar czf "$staging.tar.gz" "$staging"
            cp "$staging.tar.gz" "$staging"/
            chmod --recursive go+r /root/.cargo/registry
      - name: Build the debug binaries
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ matrix.docker_image }}
          options: ${{ matrix.docker_options }}
          run: |
            rustup target add ${{ matrix.target }}
            staging="radicle-${{ matrix.target }}"
            mkdir -p "$staging/debug"

            cargo build --target ${{ matrix.target }} --bin git-remote-rad
            cp target/${{ matrix.target }}/debug/git-remote-rad "$staging"/debug/

            cargo build --target=${{ matrix.target }} --bin rad
            cp target/${{ matrix.target }}/debug/rad "$staging"/debug/

            tar czf "$staging-debug.tar.gz" "$staging"/debug
            cp "$staging-debug.tar.gz" "$staging"/debug/
      - shell: bash
        run: |
          echo "$SSH_PRIVATE_KEY" >ssh-private-key
          chmod go-rwx ssh-private-key
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ssh-private-key github-actions@files.radicle.xyz mkdir -p "/mnt/radicle/releases/${{ github.sha }}/${{ matrix.target }}/debug"
          scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ssh-private-key -r radicle-${{ matrix.target }}/* "github-actions@files.radicle.xyz:/mnt/radicle/releases/${{ github.sha }}/${{ matrix.target }}"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  release-macos-binaries:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: macos-11
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    steps:
      - uses: actions/checkout@v3
      - name: Configure build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: dtolnay/rust-toolchain@1.67
      - name: Build the release binaries
        run: |
          rustup target add ${{ matrix.target }}
          staging="radicle-${{ matrix.target }}"
          mkdir -p "$staging"

          cargo build --target ${{ matrix.target }} --package=radicle-httpd --release
          cp target/${{ matrix.target }}/release/radicle-httpd "$staging"/

          cargo build --target ${{ matrix.target }} --package=radicle-node --release
          cp target/${{ matrix.target }}/release/radicle-node "$staging"/

          cargo build --target ${{ matrix.target }} --bin rad --release
          cp target/${{ matrix.target }}/release/rad "$staging"/

          cargo build --target ${{ matrix.target }} --bin git-remote-rad --release
          cp target/${{ matrix.target }}/release/git-remote-rad "$staging"/

          tar czf "$staging.tar.gz" "$staging"
          cp "$staging.tar.gz" "$staging"/
      - name: Build the debug binaries
        run: |
          rustup target add ${{ matrix.target }}
          staging="radicle-${{ matrix.target }}"
          mkdir -p "$staging/debug"

          cargo build --target ${{ matrix.target }} --bin git-remote-rad
          cp target/${{ matrix.target }}/debug/git-remote-rad "$staging"/debug/

          cargo build --target=${{ matrix.target }} --bin rad
          cp target/${{ matrix.target }}/debug/rad "$staging"/debug/

          tar czf "$staging-debug.tar.gz" "$staging"/debug
          cp "$staging-debug.tar.gz" "$staging"/debug/
      - shell: bash
        run: |
          echo "$SSH_PRIVATE_KEY" >ssh-private-key
          chmod go-rwx ssh-private-key
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ssh-private-key github-actions@files.radicle.xyz mkdir -p "/mnt/radicle/releases/${{ github.sha }}/${{ matrix.target }}/debug"
          scp -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ssh-private-key -r radicle-${{ matrix.target }}/* "github-actions@files.radicle.xyz:/mnt/radicle/releases/${{ github.sha }}/${{ matrix.target }}"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

  update-latest-symlink:
    needs: [release-linux-binaries, release-macos-binaries]
    runs-on: ubuntu-20.04
    steps:
      - shell: bash
        run: |
          echo "$SSH_PRIVATE_KEY" >ssh-private-key
          chmod go-rwx ssh-private-key
          ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -i ssh-private-key github-actions@files.radicle.xyz ln -snf "/mnt/radicle/releases/${{ github.sha }}" "/mnt/radicle/releases/latest"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
